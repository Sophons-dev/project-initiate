'use server';

// import { SYSTEM_PROMPT } from './contants';
import { RecommendationsSchema } from './types';
import { zodTextFormat } from 'openai/helpers/zod';
import OpenAI from 'openai';
import { SYSTEM_PROMPT } from './contants';

const openai = new OpenAI();

// TODO: Implement more comprehensive reasonining with miniimal speed impact. Probably after our job list has been generated from scraper.
// NOTE: The "Why this matches you" entry generated by the AI agent always responses with "Matches your interest". Probably due to reasoning compromises over speed
export async function generateRecommendations({
  context,
  recommendationCount = 10,
}: {
  context: string;
  recommendationCount?: number;
}) {
  try {
    const response = await openai.responses.parse({
      model: 'gpt-5-nano',
      reasoning: { effort: 'low' },
      input: [
        {
          role: 'system',
          // content: SYSTEM_PROMPT,
          content: `Search for jobs based on user profile: ${context}`,
        },
        {
          role: 'user',
          content: `Search for a list of at least ${recommendationCount} jobs, opportunities, recommendations, etc.`,
        },
      ],
      tools: [
        {
          type: 'web_search',
          filters: {
            allowed_domains: ['philjobnet.gov.ph', 'ph.jobstreet.com'],
          },
        },
      ],
      tool_choice: 'auto',
      text: {
        format: zodTextFormat(RecommendationsSchema, 'insight'),
      },
    });

    if (!response.output_parsed) {
      console.error('❌ No recommendations generated from OpenAI response');
      throw new Error('No recommendations generated');
    }

    console.log('✅ OpenAI response received:', JSON.stringify(response.output_parsed, null, 2));
    const parsed = RecommendationsSchema.parse(response.output_parsed);
    console.log('✅ Parsed recommendations:', parsed.recommendations.length);
    return parsed;
  } catch (error) {
    console.error('❌ Error generating recommendations:', error);
    throw error;
  }
}
