// Opportunity Models
// This file contains all opportunity-related models

model Opportunity {
  id                String                      @id @default(auto()) @map("_id") @db.ObjectId
  type              OpportunityType
  subtype           OpportunitySubtype
  title             String
  shortDescription       String
  longDescription        String

  // Generic content fields (work for all types)
  tags              String[]
  highlights        String[]                    // Key points/features
  prerequisites     String[]                    // Requirements/prerequisites
  outcomes          String[]                    // Benefits/outcomes/agenda

  // Location details
  locationType      String                      // remote, onsite, hybrid
  city              String
  country           String
  workLocation      String                      // Specific venue/address

  // Contact and application
  url               String
  contactEmail      String?
  contactPhone      String?

  // Important dates
  postedDate        String
  applicationDeadline String
  startDate         String?                     // For courses and events
  endDate           String?                     // For courses and events

  // Type-specific metadata (JSON)
  metadata          Json

  // Organization benefits/features (JSON)
  organizationBenefits Json

  // Organization reference
  organizationId    String                      @db.ObjectId
  createdBy         String                      @db.ObjectId
  createdAt         DateTime?
  updatedAt         DateTime?
  recommendations   OpportunityRecommendation[]
  userOpportunities UserOpportunity[]
  organization     Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@index([organizationId])
  @@index([createdBy])
  @@index([type])
  @@index([city])
  @@index([startDate])
}

model OpportunityRecommendation {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  userId        String      @db.ObjectId
  opportunityId String      @db.ObjectId
  score         Float?
  rank          Int?
  reasoning     String?
  tagsMatched   String[]
  modelVersion  String?
  createdAt     DateTime?
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  opportunity   Opportunity @relation(fields: [opportunityId], references: [id])

  @@index([userId])
  @@index([opportunityId])
  @@unique([userId, opportunityId])
}
